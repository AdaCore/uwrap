import ada.wrappers;
import ada.transformations;

walk wrap_ada_specs ();

match DefiningName (x"(.*)")
wrap w_DefiningName (normalize_ada_name ("\1"));

match DefiningName (x"(.*)_h")
wrap w_DefiningName (normalize_ada_name ("\1") & "_Wrapped");

match d: NumberDecl(child (n: DefiningName (x"(.*)Error")))
walk error_code_into_exception ("Test_Exceptions", "My_Registry", "\1"); 

match SubpDecl ()
   and child (f_subp_kind ("function")) 
   and child (TypeExpr (x"int")) 
   and not child (DefiningName ("lastError"))
walk return_into_exception ("Test_Exceptions", "My_Registry"); 

match ParamSpec(x"access *")
walk access_into_return (); 
