visitor sub_analyze (p1, p2) {
    match Entity () or Call ()
    wrap standard.out ("sub_analyze: \e<f_name>, \e<p1>, \e<p2>\n"); 
}

match Entity () or Call ()
wrap standard.out ("default: \e<f_name>\n");

match f_name("A(.*)")
wrap sub_analyze ("A", "\1");

match f_name ("B(.*)")
wrap sub_analyze (p2 => "\1", p1 => "B");

match f_name ("C(?<x>.*)") {
    pick child ().all () wrap sub_analyze ("C", x);
    wrap over;
}

match f_name ("D(?<x>.*)") {
    pick f_args.child ().all () wrap sub_analyze ("D", "\e<x>");
    wrap over;
}
