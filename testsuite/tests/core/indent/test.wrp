template w_A do
   var contents : text;
end;

template w_B do
   var contents : text;
end;

template w_C do
   var contents : text;
end;

match f_name (x"A")
wrap w_A ();

match f_name (x"B") 
wrap w_B ();

match f_name (x"C")
wrap w_C ();

match w_A ()
weave (
   contents => defer (i"""
   \e<origin.f_name>:
      \e<child (v: w_B ()).fold (c: "", c: (c & v.contents), c: (c & "\n"))>"""));

match w_B ()
weave (
   contents => defer (i"""
   \e<origin.f_name>:
      \e<child (v: w_C ()).fold (c: "", c: (c & v.contents), c: (c & "\n"))>"""));

match w_C ()
weave (
   contents => defer (i"""
   \e<origin.f_name> LEVEL 1
      LEVEL 2
   BACK TO LEVEL 1"""));

match w_A ()
wrap standard.out (defer (contents & "\n"));
