template main do
    var title : text;
    var content : text;
end;

match Entity () do
    match f_name (x"A")
    pick it weave main (title => @ & "SELF TEMPLATE FOR A\n");

    match f_name (x"A")
    weave main (title => @ & "IMPLICIT TEMPLATE FOR A\n");

    match e: it () and p: parent (f_name ("A"))
    pick p weave main (content => @ & "'A' HAS A CHILD NAMED '\e<e.f_name>'\n");

    match e: it () and parent (Entity () and p: parent (f_name ("A")))
    pick p weave main (content => @ & "'A' HAS A GRAND CHILD NAMED '\e<e.f_name>'\n");
end;

match main ()
wrap standard.out ("\e<title>{\n\e<it.content>}");
